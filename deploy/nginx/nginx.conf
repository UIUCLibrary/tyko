user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include mime.types;
    #include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response

        # for UNIX domain socket setups
        server unix:/tmp/gunicorn.sock fail_timeout=0;

        # for a TCP configuration
        # server 192.168.0.7:8000 fail_timeout=0;
    }


    keepalive_timeout  65;

    #gzip  on;
    #server {
    #    # if no Host match, close the connection to prevent host spoofing
    #    listen 80 default_server;
    #    return 444;
    #}
    server{
      listen 80;
      server_name tyko;
      location / {
        proxy_pass http://blue_api:9182;
      }
    }
    server{
      server_name tyko.green;
      listen 8000;

      location / {
        proxy_pass http://green_api:9182/;
      }
    }
    server{
      listen 8001;
      server_name tyko.blue;
      location / {
        proxy_pass http://blue_api:9182/;
      }
    }

#         location / {
#           proxy_pass http:

 #error_log    /var/log/nginx/your.server.url.error.log;
      #location /blue {
      #   try_files $uri @proxy_to_app;
      #}
      #location @proxy_to_app{
      #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #  proxy_set_header Host $proxy_host;
      #  #proxy_redirect http://blue_api:8000/ http://0.0.0.0;
      #  proxy_pass http://blue_api:8000;
      #  #rewrite ^ $proxy_host$request_uri? permanent;
      #}

    #}

    #include /etc/nginx/conf.d/tyko.conf;
}
