on: [push]
name: SonarQube

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  eslint:
    name: ESlint static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm install -y
      - run: mkdir -p reports
      - run: ./node_modules/.bin/eslint -f json -o reports/eslint_report.json tyko/static/js/ --ext=.js,.mjs
        continue-on-error: true
      - run : sed -i 's/\/home\/runner\/work\/tyko\/tyko/\/github\/workspace/g' reports/eslint_report.json
      - name: Upload ESlint report
        uses: actions/upload-artifact@v1
        with:
         name: eslint-report
         path: reports/eslint_report.json
  jest:
    name: Javascript tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm install
      - run: npm run build --if-present
      - run: npm test --  --reporters=default --reporters=jest-junit --collectCoverage
        env:
          CI: true
          JEST_JUNIT_OUTPUT_NAME: js-junit.xml
          JEST_JUNIT_OUTPUT_DIR: reports
          JEST_JUNIT_ADD_FILE_ATTRIBUTE: true
        continue-on-error: true
      - name: Upload Jest xunit
        uses: actions/upload-artifact@v1
        with:
          name: jest-xunint
          path: reports
      - name: Upload Jest coverage report
        uses: actions/upload-artifact@v1
        with:
          name: jest-coverage
          path: coverage
  pytest:
    name: Run Python tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
          python-version: 3.7
    - name: Cache python dependendies
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pytest pytest_bdd coverage

    - name: Run Pytest
      run: |
       coverage run --parallel-mode --branch --source=tyko,tests -m pytest --junitxml=reports/test-report.xml
       coverage combine
       coverage xml -o coverage-reports/pythoncoverage-pytest.xml
       sed -i 's/\/home\/runner\/work\/tyko\/tyko/\/github\/workspace/g' coverage-reports/pythoncoverage-pytest.xml
       sed -i 's/\/home\/runner\/work\/tyko\/tyko/\/github\/workspace/g' reports/test-report.xml
      continue-on-error: true
    - name: Upload pytest report xunit results
      uses: actions/upload-artifact@v1
      with:
        name: pytest-report
        path: reports/test-report.xml
    - name: Upload pytest coverage report
      uses: actions/upload-artifact@v1
      with:
        name: pytest-coverage
        path: coverage-reports/pythoncoverage-pytest.xml
  pylint:
    name: Run Pylint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
          python-version: 3.7
    - name: Cache python dependendies
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pylint
    - name: Run pylint
      run: |
       mkdir -p reports
       pylint tyko  -r n --msg-template="{path}:{module}:{line}: [{msg_id}({symbol}), {obj}] {msg}" | tee reports/pylint_issues.txt
      continue-on-error: true
    - name: Upload pylint report
      uses: actions/upload-artifact@v1
      with:
        name: pylint-report
        path: reports/pylint_issues.txt
  bandit:
    name: Search for security issues
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
          python-version: 3.7
    - name: Cache python dependendies
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt bandit
    - name: Run Bandit
      run: |
        mkdir -p reports
        bandit --format json --output reports/bandit-report.json --recursive tyko
      continue-on-error: true
    - name: Upload Bandit report
      uses: actions/upload-artifact@v1
      with:
        name: bandit-report
        path: reports/bandit-report.json
  flake8:
    name: Check code style
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
          python-version: 3.7
    - name: Cache python dependendies
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt flake8
    - name: Run flake8
      run: |
        mkdir -p reports
        flake8 tyko --output-file reports/flake8.log
      continue-on-error: true
    - name: Upload flake8 report
      uses: actions/upload-artifact@v1
      with:
        name: flake8-report
        path: reports/flake8.log

  sonarCloudTrigger:
    needs: [pytest,jest,pylint,bandit,eslint,flake8]
    name: SonarCloud Trigger
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    - name: Get pytest report
      uses: actions/download-artifact@v1
      with:
        name: pytest-report
        path: reports
    - name: Get Jest coverage report
      uses: actions/download-artifact@v1
      with:
        name: jest-coverage
        path: coverage
    - name: Get ESlint report
      uses: actions/download-artifact@v1
      with:
        name: eslint-report
        path: reports
    - name: Get Jest xunit report
      uses: actions/download-artifact@v1
      with:
        name: jest-xunint
        path: reports
    - name: Get Pylint report
      uses: actions/download-artifact@v1
      with:
        name: pylint-report
        path: reports
    - name: Get flake8 report
      uses: actions/download-artifact@v1
      with:
        name: flake8-report
        path: reports
    - name: Get pytest coverage report
      uses: actions/download-artifact@v1
      with:
        name: pytest-coverage
        path: coverage-reports
    - name: Get Bandit report
      uses: actions/download-artifact@v1
      with:
        name: bandit-report
        path: reports
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
